#
# TMUX settings of Gsus R. Sanchez,
# Modified by Carlos Llamacho
#

set-option -g default-shell /usr/bin/zsh

# No repeat switching panes
unbind k
bind-key k select-pane -U
unbind j
bind-key j select-pane -D
unbind h
bind-key h select-pane -L
unbind l
bind-key l select-pane -R

# Set the prefix to C-A.
unbind C-b
set -g prefix C-A
bind a send-prefix

set -g default-terminal "screen-256color"
set -g lock-command "/usr/bin/tlock"
set -g history-limit 60000

# Bind appropriate commands similar to screen.
# lockscreen C-X x
unbind C-X
bind C-X lock-server
unbind x
bind x lock-server

# screen C-C c
unbind C-C
bind C-C new-window
unbind c
bind c new-window

# detach C-D d
unbind C-D
bind C-D detach

# displays *
unbind *
bind * list-clients

# next C-@ C-N sp n
unbind C-@
bind C-@ next-window
unbind C-N
bind C-N next-window
unbind Space
bind Space next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other C-A
unbind C-A
bind C-A last-window

# prev C-H C-P p C-?
unbind C-H
bind C-H previous-window
unbind C-P
bind C-P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows C-W w
unbind C-W
bind C-W list-windows
unbind w
bind w list-windows

## screen-like hardcopy and logging
bind C-a select-window -t !
bind H capture-pane \; save-buffer -b 0 './tmux.hardcopy' \; delete-buffer
bind h pipe-pane -o 'cat >>./output.#I-#P'

# quit \
unbind '\'
bind '\' confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay C-L l
unbind C-L
bind C-L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window -h

unbind %
bind - split-window -v

# :kB: focus up
unbind Tab
bind Tab select-pane -t :.+
unbind BTab
bind BTab select-pane -t :.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

set-option -g set-titles on
set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)
set-window-option -g automatic-rename on # auto name

# Window Mouse Mode
# set-window-option -g mode-mouse on
# set -g mouse-select-pane on

# messages
set-window-option -g mode-bg magenta
set-window-option -g mode-fg black
set-option -g message-bg magenta
set-option -g message-fg black

### Powerline ###

# Bindings
#bind C-[ run '~/.tmux_powerline/mute_powerline.sh left'
#bind C-] run '~/.tmux_powerline/mute_powerline.sh right'

# MOCP bindings
#bind-key m run 'mocp -S'   # On
#bind-key M run 'mocp -x'   # Off
#bind-key F2 run 'mocp -p'  # Play
#bind-key F3 run 'mocp -r'  # Previous
#bind-key F4 run 'mocp -f'  # Next
#bind-key F5 run 'mocp -s'  # Stop
#bind-key F6 run 'mocp -G'  # Pause

# TMUX reloader
bind-key F12 source-file ~/.tmux.conf

# Settings
#source /usr/lib/python2.7/site-packages/Powerline-beta-py2.7.egg/powerline/bindings/tmux/powerline.conf
# source /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf
#set-option -g status on
#set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g pane-active-border-fg 'cyan'
set-option -g visual-activity on
#set-option -g visual-bell off
set-window-option -g monitor-activity on

# status bar
set-option -g status-utf8 on
set-option -g status-right ""
# Clock
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 24

# Mode Keys
set-window-option -g mode-keys vi

## add some vi-style
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind -nr -t emacs-copy h cursor-left
bind -nr -t emacs-copy j cursor-down
bind -nr -t emacs-copy k cursor-up
bind -nr -t emacs-copy l cursor-right
bind -nr -t emacs-copy b page-up
bind -nr -t emacs-copy / search-forward
bind -nr -t emacs-copy ? search-reverse
#bind -nr -t emacs-copy $ start-of-line
#bind -nr -t emacs-copy 0 end-of-line
bind -nr -t emacs-copy : goto-line

# Creating our default configuration
# new-session -d -s mysession

# new-window -t mysession:1 -n 'CodeArea'
# new-window -t mysession:2 -n 'TestArea'
# new-window -t mysession:3 -n 'Tasks'
#new-window -t samael:4 -n ']FileZ[' 'mc -S bluefar'
#new-window -t samael:5 -n '}ABook{' 'abook'
#new-window -t samael:6 -n '<cal>' 'calcurse'
#new-window -t samael:7 -n '>finch<' 'finch'
#
setw -g aggressive-resize on

